package com.yondervision.yfmap.dto;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class Mi008Example {

	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table MI008
	 * @abatorgenerated  Fri Oct 04 15:07:58 CST 2013
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table MI008
	 * @abatorgenerated  Fri Oct 04 15:07:58 CST 2013
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table MI008
	 * @abatorgenerated  Fri Oct 04 15:07:58 CST 2013
	 */
	public Mi008Example() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table MI008
	 * @abatorgenerated  Fri Oct 04 15:07:58 CST 2013
	 */
	protected Mi008Example(Mi008Example example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table MI008
	 * @abatorgenerated  Fri Oct 04 15:07:58 CST 2013
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table MI008
	 * @abatorgenerated  Fri Oct 04 15:07:58 CST 2013
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table MI008
	 * @abatorgenerated  Fri Oct 04 15:07:58 CST 2013
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table MI008
	 * @abatorgenerated  Fri Oct 04 15:07:58 CST 2013
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table MI008
	 * @abatorgenerated  Fri Oct 04 15:07:58 CST 2013
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table MI008
	 * @abatorgenerated  Fri Oct 04 15:07:58 CST 2013
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table MI008
	 * @abatorgenerated  Fri Oct 04 15:07:58 CST 2013
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Abator for iBATIS. This class corresponds to the database table MI008
	 * @abatorgenerated  Fri Oct 04 15:07:58 CST 2013
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andSyskeyIsNull() {
			addCriterion("SYSKEY is null");
			return this;
		}

		public Criteria andSyskeyIsNotNull() {
			addCriterion("SYSKEY is not null");
			return this;
		}

		public Criteria andSyskeyEqualTo(String value) {
			addCriterion("SYSKEY =", value, "syskey");
			return this;
		}

		public Criteria andSyskeyNotEqualTo(String value) {
			addCriterion("SYSKEY <>", value, "syskey");
			return this;
		}

		public Criteria andSyskeyGreaterThan(String value) {
			addCriterion("SYSKEY >", value, "syskey");
			return this;
		}

		public Criteria andSyskeyGreaterThanOrEqualTo(String value) {
			addCriterion("SYSKEY >=", value, "syskey");
			return this;
		}

		public Criteria andSyskeyLessThan(String value) {
			addCriterion("SYSKEY <", value, "syskey");
			return this;
		}

		public Criteria andSyskeyLessThanOrEqualTo(String value) {
			addCriterion("SYSKEY <=", value, "syskey");
			return this;
		}

		public Criteria andSyskeyLike(String value) {
			addCriterion("SYSKEY like", value, "syskey");
			return this;
		}

		public Criteria andSyskeyNotLike(String value) {
			addCriterion("SYSKEY not like", value, "syskey");
			return this;
		}

		public Criteria andSyskeyIn(List values) {
			addCriterion("SYSKEY in", values, "syskey");
			return this;
		}

		public Criteria andSyskeyNotIn(List values) {
			addCriterion("SYSKEY not in", values, "syskey");
			return this;
		}

		public Criteria andSyskeyBetween(String value1, String value2) {
			addCriterion("SYSKEY between", value1, value2, "syskey");
			return this;
		}

		public Criteria andSyskeyNotBetween(String value1, String value2) {
			addCriterion("SYSKEY not between", value1, value2, "syskey");
			return this;
		}

		public Criteria andSysseqIsNull() {
			addCriterion("SYSSEQ is null");
			return this;
		}

		public Criteria andSysseqIsNotNull() {
			addCriterion("SYSSEQ is not null");
			return this;
		}

		public Criteria andSysseqEqualTo(Long value) {
			addCriterion("SYSSEQ =", value, "sysseq");
			return this;
		}

		public Criteria andSysseqNotEqualTo(Long value) {
			addCriterion("SYSSEQ <>", value, "sysseq");
			return this;
		}

		public Criteria andSysseqGreaterThan(Long value) {
			addCriterion("SYSSEQ >", value, "sysseq");
			return this;
		}

		public Criteria andSysseqGreaterThanOrEqualTo(Long value) {
			addCriterion("SYSSEQ >=", value, "sysseq");
			return this;
		}

		public Criteria andSysseqLessThan(Long value) {
			addCriterion("SYSSEQ <", value, "sysseq");
			return this;
		}

		public Criteria andSysseqLessThanOrEqualTo(Long value) {
			addCriterion("SYSSEQ <=", value, "sysseq");
			return this;
		}

		public Criteria andSysseqIn(List values) {
			addCriterion("SYSSEQ in", values, "sysseq");
			return this;
		}

		public Criteria andSysseqNotIn(List values) {
			addCriterion("SYSSEQ not in", values, "sysseq");
			return this;
		}

		public Criteria andSysseqBetween(Long value1, Long value2) {
			addCriterion("SYSSEQ between", value1, value2, "sysseq");
			return this;
		}

		public Criteria andSysseqNotBetween(Long value1, Long value2) {
			addCriterion("SYSSEQ not between", value1, value2, "sysseq");
			return this;
		}

		public Criteria andModitimeIsNull() {
			addCriterion("MODITIME is null");
			return this;
		}

		public Criteria andModitimeIsNotNull() {
			addCriterion("MODITIME is not null");
			return this;
		}

		public Criteria andModitimeEqualTo(String value) {
			addCriterion("MODITIME =", value, "moditime");
			return this;
		}

		public Criteria andModitimeNotEqualTo(String value) {
			addCriterion("MODITIME <>", value, "moditime");
			return this;
		}

		public Criteria andModitimeGreaterThan(String value) {
			addCriterion("MODITIME >", value, "moditime");
			return this;
		}

		public Criteria andModitimeGreaterThanOrEqualTo(String value) {
			addCriterion("MODITIME >=", value, "moditime");
			return this;
		}

		public Criteria andModitimeLessThan(String value) {
			addCriterion("MODITIME <", value, "moditime");
			return this;
		}

		public Criteria andModitimeLessThanOrEqualTo(String value) {
			addCriterion("MODITIME <=", value, "moditime");
			return this;
		}

		public Criteria andModitimeLike(String value) {
			addCriterion("MODITIME like", value, "moditime");
			return this;
		}

		public Criteria andModitimeNotLike(String value) {
			addCriterion("MODITIME not like", value, "moditime");
			return this;
		}

		public Criteria andModitimeIn(List values) {
			addCriterion("MODITIME in", values, "moditime");
			return this;
		}

		public Criteria andModitimeNotIn(List values) {
			addCriterion("MODITIME not in", values, "moditime");
			return this;
		}

		public Criteria andModitimeBetween(String value1, String value2) {
			addCriterion("MODITIME between", value1, value2, "moditime");
			return this;
		}

		public Criteria andModitimeNotBetween(String value1, String value2) {
			addCriterion("MODITIME not between", value1, value2, "moditime");
			return this;
		}
	}
}