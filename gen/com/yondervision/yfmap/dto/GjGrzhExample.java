package com.yondervision.yfmap.dto;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class GjGrzhExample {
    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table gj_grzh
     *
     * @abatorgenerated Thu Sep 25 14:25:59 CST 2014
     */
    protected String orderByClause;

    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table gj_grzh
     *
     * @abatorgenerated Thu Sep 25 14:25:59 CST 2014
     */
    protected List oredCriteria;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table gj_grzh
     *
     * @abatorgenerated Thu Sep 25 14:25:59 CST 2014
     */
    public GjGrzhExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table gj_grzh
     *
     * @abatorgenerated Thu Sep 25 14:25:59 CST 2014
     */
    protected GjGrzhExample(GjGrzhExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table gj_grzh
     *
     * @abatorgenerated Thu Sep 25 14:25:59 CST 2014
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table gj_grzh
     *
     * @abatorgenerated Thu Sep 25 14:25:59 CST 2014
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table gj_grzh
     *
     * @abatorgenerated Thu Sep 25 14:25:59 CST 2014
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table gj_grzh
     *
     * @abatorgenerated Thu Sep 25 14:25:59 CST 2014
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table gj_grzh
     *
     * @abatorgenerated Thu Sep 25 14:25:59 CST 2014
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table gj_grzh
     *
     * @abatorgenerated Thu Sep 25 14:25:59 CST 2014
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table gj_grzh
     *
     * @abatorgenerated Thu Sep 25 14:25:59 CST 2014
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table gj_grzh
     *
     * @abatorgenerated Thu Sep 25 14:25:59 CST 2014
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andGrsbIsNull() {
            addCriterion("grsb is null");
            return this;
        }

        public Criteria andGrsbIsNotNull() {
            addCriterion("grsb is not null");
            return this;
        }

        public Criteria andGrsbEqualTo(String value) {
            addCriterion("grsb =", value, "grsb");
            return this;
        }

        public Criteria andGrsbNotEqualTo(String value) {
            addCriterion("grsb <>", value, "grsb");
            return this;
        }

        public Criteria andGrsbGreaterThan(String value) {
            addCriterion("grsb >", value, "grsb");
            return this;
        }

        public Criteria andGrsbGreaterThanOrEqualTo(String value) {
            addCriterion("grsb >=", value, "grsb");
            return this;
        }

        public Criteria andGrsbLessThan(String value) {
            addCriterion("grsb <", value, "grsb");
            return this;
        }

        public Criteria andGrsbLessThanOrEqualTo(String value) {
            addCriterion("grsb <=", value, "grsb");
            return this;
        }

        public Criteria andGrsbLike(String value) {
            addCriterion("grsb like", value, "grsb");
            return this;
        }

        public Criteria andGrsbNotLike(String value) {
            addCriterion("grsb not like", value, "grsb");
            return this;
        }

        public Criteria andGrsbIn(List values) {
            addCriterion("grsb in", values, "grsb");
            return this;
        }

        public Criteria andGrsbNotIn(List values) {
            addCriterion("grsb not in", values, "grsb");
            return this;
        }

        public Criteria andGrsbBetween(String value1, String value2) {
            addCriterion("grsb between", value1, value2, "grsb");
            return this;
        }

        public Criteria andGrsbNotBetween(String value1, String value2) {
            addCriterion("grsb not between", value1, value2, "grsb");
            return this;
        }

        public Criteria andZhlxIsNull() {
            addCriterion("zhlx is null");
            return this;
        }

        public Criteria andZhlxIsNotNull() {
            addCriterion("zhlx is not null");
            return this;
        }

        public Criteria andZhlxEqualTo(String value) {
            addCriterion("zhlx =", value, "zhlx");
            return this;
        }

        public Criteria andZhlxNotEqualTo(String value) {
            addCriterion("zhlx <>", value, "zhlx");
            return this;
        }

        public Criteria andZhlxGreaterThan(String value) {
            addCriterion("zhlx >", value, "zhlx");
            return this;
        }

        public Criteria andZhlxGreaterThanOrEqualTo(String value) {
            addCriterion("zhlx >=", value, "zhlx");
            return this;
        }

        public Criteria andZhlxLessThan(String value) {
            addCriterion("zhlx <", value, "zhlx");
            return this;
        }

        public Criteria andZhlxLessThanOrEqualTo(String value) {
            addCriterion("zhlx <=", value, "zhlx");
            return this;
        }

        public Criteria andZhlxLike(String value) {
            addCriterion("zhlx like", value, "zhlx");
            return this;
        }

        public Criteria andZhlxNotLike(String value) {
            addCriterion("zhlx not like", value, "zhlx");
            return this;
        }

        public Criteria andZhlxIn(List values) {
            addCriterion("zhlx in", values, "zhlx");
            return this;
        }

        public Criteria andZhlxNotIn(List values) {
            addCriterion("zhlx not in", values, "zhlx");
            return this;
        }

        public Criteria andZhlxBetween(String value1, String value2) {
            addCriterion("zhlx between", value1, value2, "zhlx");
            return this;
        }

        public Criteria andZhlxNotBetween(String value1, String value2) {
            addCriterion("zhlx not between", value1, value2, "zhlx");
            return this;
        }

        public Criteria andDwdmIsNull() {
            addCriterion("dwdm is null");
            return this;
        }

        public Criteria andDwdmIsNotNull() {
            addCriterion("dwdm is not null");
            return this;
        }

        public Criteria andDwdmEqualTo(String value) {
            addCriterion("dwdm =", value, "dwdm");
            return this;
        }

        public Criteria andDwdmNotEqualTo(String value) {
            addCriterion("dwdm <>", value, "dwdm");
            return this;
        }

        public Criteria andDwdmGreaterThan(String value) {
            addCriterion("dwdm >", value, "dwdm");
            return this;
        }

        public Criteria andDwdmGreaterThanOrEqualTo(String value) {
            addCriterion("dwdm >=", value, "dwdm");
            return this;
        }

        public Criteria andDwdmLessThan(String value) {
            addCriterion("dwdm <", value, "dwdm");
            return this;
        }

        public Criteria andDwdmLessThanOrEqualTo(String value) {
            addCriterion("dwdm <=", value, "dwdm");
            return this;
        }

        public Criteria andDwdmLike(String value) {
            addCriterion("dwdm like", value, "dwdm");
            return this;
        }

        public Criteria andDwdmNotLike(String value) {
            addCriterion("dwdm not like", value, "dwdm");
            return this;
        }

        public Criteria andDwdmIn(List values) {
            addCriterion("dwdm in", values, "dwdm");
            return this;
        }

        public Criteria andDwdmNotIn(List values) {
            addCriterion("dwdm not in", values, "dwdm");
            return this;
        }

        public Criteria andDwdmBetween(String value1, String value2) {
            addCriterion("dwdm between", value1, value2, "dwdm");
            return this;
        }

        public Criteria andDwdmNotBetween(String value1, String value2) {
            addCriterion("dwdm not between", value1, value2, "dwdm");
            return this;
        }

        public Criteria andZhztIsNull() {
            addCriterion("zhzt is null");
            return this;
        }

        public Criteria andZhztIsNotNull() {
            addCriterion("zhzt is not null");
            return this;
        }

        public Criteria andZhztEqualTo(String value) {
            addCriterion("zhzt =", value, "zhzt");
            return this;
        }

        public Criteria andZhztNotEqualTo(String value) {
            addCriterion("zhzt <>", value, "zhzt");
            return this;
        }

        public Criteria andZhztGreaterThan(String value) {
            addCriterion("zhzt >", value, "zhzt");
            return this;
        }

        public Criteria andZhztGreaterThanOrEqualTo(String value) {
            addCriterion("zhzt >=", value, "zhzt");
            return this;
        }

        public Criteria andZhztLessThan(String value) {
            addCriterion("zhzt <", value, "zhzt");
            return this;
        }

        public Criteria andZhztLessThanOrEqualTo(String value) {
            addCriterion("zhzt <=", value, "zhzt");
            return this;
        }

        public Criteria andZhztLike(String value) {
            addCriterion("zhzt like", value, "zhzt");
            return this;
        }

        public Criteria andZhztNotLike(String value) {
            addCriterion("zhzt not like", value, "zhzt");
            return this;
        }

        public Criteria andZhztIn(List values) {
            addCriterion("zhzt in", values, "zhzt");
            return this;
        }

        public Criteria andZhztNotIn(List values) {
            addCriterion("zhzt not in", values, "zhzt");
            return this;
        }

        public Criteria andZhztBetween(String value1, String value2) {
            addCriterion("zhzt between", value1, value2, "zhzt");
            return this;
        }

        public Criteria andZhztNotBetween(String value1, String value2) {
            addCriterion("zhzt not between", value1, value2, "zhzt");
            return this;
        }

        public Criteria andSnyeIsNull() {
            addCriterion("snye is null");
            return this;
        }

        public Criteria andSnyeIsNotNull() {
            addCriterion("snye is not null");
            return this;
        }

        public Criteria andSnyeEqualTo(BigDecimal value) {
            addCriterion("snye =", value, "snye");
            return this;
        }

        public Criteria andSnyeNotEqualTo(BigDecimal value) {
            addCriterion("snye <>", value, "snye");
            return this;
        }

        public Criteria andSnyeGreaterThan(BigDecimal value) {
            addCriterion("snye >", value, "snye");
            return this;
        }

        public Criteria andSnyeGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("snye >=", value, "snye");
            return this;
        }

        public Criteria andSnyeLessThan(BigDecimal value) {
            addCriterion("snye <", value, "snye");
            return this;
        }

        public Criteria andSnyeLessThanOrEqualTo(BigDecimal value) {
            addCriterion("snye <=", value, "snye");
            return this;
        }

        public Criteria andSnyeIn(List values) {
            addCriterion("snye in", values, "snye");
            return this;
        }

        public Criteria andSnyeNotIn(List values) {
            addCriterion("snye not in", values, "snye");
            return this;
        }

        public Criteria andSnyeBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("snye between", value1, value2, "snye");
            return this;
        }

        public Criteria andSnyeNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("snye not between", value1, value2, "snye");
            return this;
        }

        public Criteria andBnyeIsNull() {
            addCriterion("bnye is null");
            return this;
        }

        public Criteria andBnyeIsNotNull() {
            addCriterion("bnye is not null");
            return this;
        }

        public Criteria andBnyeEqualTo(BigDecimal value) {
            addCriterion("bnye =", value, "bnye");
            return this;
        }

        public Criteria andBnyeNotEqualTo(BigDecimal value) {
            addCriterion("bnye <>", value, "bnye");
            return this;
        }

        public Criteria andBnyeGreaterThan(BigDecimal value) {
            addCriterion("bnye >", value, "bnye");
            return this;
        }

        public Criteria andBnyeGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("bnye >=", value, "bnye");
            return this;
        }

        public Criteria andBnyeLessThan(BigDecimal value) {
            addCriterion("bnye <", value, "bnye");
            return this;
        }

        public Criteria andBnyeLessThanOrEqualTo(BigDecimal value) {
            addCriterion("bnye <=", value, "bnye");
            return this;
        }

        public Criteria andBnyeIn(List values) {
            addCriterion("bnye in", values, "bnye");
            return this;
        }

        public Criteria andBnyeNotIn(List values) {
            addCriterion("bnye not in", values, "bnye");
            return this;
        }

        public Criteria andBnyeBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("bnye between", value1, value2, "bnye");
            return this;
        }

        public Criteria andBnyeNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("bnye not between", value1, value2, "bnye");
            return this;
        }

        public Criteria andHjyeIsNull() {
            addCriterion("hjye is null");
            return this;
        }

        public Criteria andHjyeIsNotNull() {
            addCriterion("hjye is not null");
            return this;
        }

        public Criteria andHjyeEqualTo(BigDecimal value) {
            addCriterion("hjye =", value, "hjye");
            return this;
        }

        public Criteria andHjyeNotEqualTo(BigDecimal value) {
            addCriterion("hjye <>", value, "hjye");
            return this;
        }

        public Criteria andHjyeGreaterThan(BigDecimal value) {
            addCriterion("hjye >", value, "hjye");
            return this;
        }

        public Criteria andHjyeGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("hjye >=", value, "hjye");
            return this;
        }

        public Criteria andHjyeLessThan(BigDecimal value) {
            addCriterion("hjye <", value, "hjye");
            return this;
        }

        public Criteria andHjyeLessThanOrEqualTo(BigDecimal value) {
            addCriterion("hjye <=", value, "hjye");
            return this;
        }

        public Criteria andHjyeIn(List values) {
            addCriterion("hjye in", values, "hjye");
            return this;
        }

        public Criteria andHjyeNotIn(List values) {
            addCriterion("hjye not in", values, "hjye");
            return this;
        }

        public Criteria andHjyeBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("hjye between", value1, value2, "hjye");
            return this;
        }

        public Criteria andHjyeNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("hjye not between", value1, value2, "hjye");
            return this;
        }
    }
}