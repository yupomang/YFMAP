package com.yondervision.yfmap.dto.shiyan;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ACunkuanExample {

	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table A_CUNKUAN
	 * @abatorgenerated  Sat Aug 27 20:03:34 CST 2016
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table A_CUNKUAN
	 * @abatorgenerated  Sat Aug 27 20:03:34 CST 2016
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table A_CUNKUAN
	 * @abatorgenerated  Sat Aug 27 20:03:34 CST 2016
	 */
	public ACunkuanExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table A_CUNKUAN
	 * @abatorgenerated  Sat Aug 27 20:03:34 CST 2016
	 */
	protected ACunkuanExample(ACunkuanExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table A_CUNKUAN
	 * @abatorgenerated  Sat Aug 27 20:03:34 CST 2016
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table A_CUNKUAN
	 * @abatorgenerated  Sat Aug 27 20:03:34 CST 2016
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table A_CUNKUAN
	 * @abatorgenerated  Sat Aug 27 20:03:34 CST 2016
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table A_CUNKUAN
	 * @abatorgenerated  Sat Aug 27 20:03:34 CST 2016
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table A_CUNKUAN
	 * @abatorgenerated  Sat Aug 27 20:03:34 CST 2016
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table A_CUNKUAN
	 * @abatorgenerated  Sat Aug 27 20:03:34 CST 2016
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table A_CUNKUAN
	 * @abatorgenerated  Sat Aug 27 20:03:34 CST 2016
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Abator for iBATIS. This class corresponds to the database table A_CUNKUAN
	 * @abatorgenerated  Sat Aug 27 20:03:34 CST 2016
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andAIsNull() {
			addCriterion("A is null");
			return this;
		}

		public Criteria andAIsNotNull() {
			addCriterion("A is not null");
			return this;
		}

		public Criteria andAEqualTo(String value) {
			addCriterion("A =", value, "a");
			return this;
		}

		public Criteria andANotEqualTo(String value) {
			addCriterion("A <>", value, "a");
			return this;
		}

		public Criteria andAGreaterThan(String value) {
			addCriterion("A >", value, "a");
			return this;
		}

		public Criteria andAGreaterThanOrEqualTo(String value) {
			addCriterion("A >=", value, "a");
			return this;
		}

		public Criteria andALessThan(String value) {
			addCriterion("A <", value, "a");
			return this;
		}

		public Criteria andALessThanOrEqualTo(String value) {
			addCriterion("A <=", value, "a");
			return this;
		}

		public Criteria andALike(String value) {
			addCriterion("A like", value, "a");
			return this;
		}

		public Criteria andANotLike(String value) {
			addCriterion("A not like", value, "a");
			return this;
		}

		public Criteria andAIn(List values) {
			addCriterion("A in", values, "a");
			return this;
		}

		public Criteria andANotIn(List values) {
			addCriterion("A not in", values, "a");
			return this;
		}

		public Criteria andABetween(String value1, String value2) {
			addCriterion("A between", value1, value2, "a");
			return this;
		}

		public Criteria andANotBetween(String value1, String value2) {
			addCriterion("A not between", value1, value2, "a");
			return this;
		}

		public Criteria andBIsNull() {
			addCriterion("B is null");
			return this;
		}

		public Criteria andBIsNotNull() {
			addCriterion("B is not null");
			return this;
		}

		public Criteria andBEqualTo(String value) {
			addCriterion("B =", value, "b");
			return this;
		}

		public Criteria andBNotEqualTo(String value) {
			addCriterion("B <>", value, "b");
			return this;
		}

		public Criteria andBGreaterThan(String value) {
			addCriterion("B >", value, "b");
			return this;
		}

		public Criteria andBGreaterThanOrEqualTo(String value) {
			addCriterion("B >=", value, "b");
			return this;
		}

		public Criteria andBLessThan(String value) {
			addCriterion("B <", value, "b");
			return this;
		}

		public Criteria andBLessThanOrEqualTo(String value) {
			addCriterion("B <=", value, "b");
			return this;
		}

		public Criteria andBLike(String value) {
			addCriterion("B like", value, "b");
			return this;
		}

		public Criteria andBNotLike(String value) {
			addCriterion("B not like", value, "b");
			return this;
		}

		public Criteria andBIn(List values) {
			addCriterion("B in", values, "b");
			return this;
		}

		public Criteria andBNotIn(List values) {
			addCriterion("B not in", values, "b");
			return this;
		}

		public Criteria andBBetween(String value1, String value2) {
			addCriterion("B between", value1, value2, "b");
			return this;
		}

		public Criteria andBNotBetween(String value1, String value2) {
			addCriterion("B not between", value1, value2, "b");
			return this;
		}

		public Criteria andCIsNull() {
			addCriterion("C is null");
			return this;
		}

		public Criteria andCIsNotNull() {
			addCriterion("C is not null");
			return this;
		}

		public Criteria andCEqualTo(String value) {
			addCriterion("C =", value, "c");
			return this;
		}

		public Criteria andCNotEqualTo(String value) {
			addCriterion("C <>", value, "c");
			return this;
		}

		public Criteria andCGreaterThan(String value) {
			addCriterion("C >", value, "c");
			return this;
		}

		public Criteria andCGreaterThanOrEqualTo(String value) {
			addCriterion("C >=", value, "c");
			return this;
		}

		public Criteria andCLessThan(String value) {
			addCriterion("C <", value, "c");
			return this;
		}

		public Criteria andCLessThanOrEqualTo(String value) {
			addCriterion("C <=", value, "c");
			return this;
		}

		public Criteria andCLike(String value) {
			addCriterion("C like", value, "c");
			return this;
		}

		public Criteria andCNotLike(String value) {
			addCriterion("C not like", value, "c");
			return this;
		}

		public Criteria andCIn(List values) {
			addCriterion("C in", values, "c");
			return this;
		}

		public Criteria andCNotIn(List values) {
			addCriterion("C not in", values, "c");
			return this;
		}

		public Criteria andCBetween(String value1, String value2) {
			addCriterion("C between", value1, value2, "c");
			return this;
		}

		public Criteria andCNotBetween(String value1, String value2) {
			addCriterion("C not between", value1, value2, "c");
			return this;
		}

		public Criteria andDIsNull() {
			addCriterion("D is null");
			return this;
		}

		public Criteria andDIsNotNull() {
			addCriterion("D is not null");
			return this;
		}

		public Criteria andDEqualTo(String value) {
			addCriterion("D =", value, "d");
			return this;
		}

		public Criteria andDNotEqualTo(String value) {
			addCriterion("D <>", value, "d");
			return this;
		}

		public Criteria andDGreaterThan(String value) {
			addCriterion("D >", value, "d");
			return this;
		}

		public Criteria andDGreaterThanOrEqualTo(String value) {
			addCriterion("D >=", value, "d");
			return this;
		}

		public Criteria andDLessThan(String value) {
			addCriterion("D <", value, "d");
			return this;
		}

		public Criteria andDLessThanOrEqualTo(String value) {
			addCriterion("D <=", value, "d");
			return this;
		}

		public Criteria andDLike(String value) {
			addCriterion("D like", value, "d");
			return this;
		}

		public Criteria andDNotLike(String value) {
			addCriterion("D not like", value, "d");
			return this;
		}

		public Criteria andDIn(List values) {
			addCriterion("D in", values, "d");
			return this;
		}

		public Criteria andDNotIn(List values) {
			addCriterion("D not in", values, "d");
			return this;
		}

		public Criteria andDBetween(String value1, String value2) {
			addCriterion("D between", value1, value2, "d");
			return this;
		}

		public Criteria andDNotBetween(String value1, String value2) {
			addCriterion("D not between", value1, value2, "d");
			return this;
		}

		public Criteria andEIsNull() {
			addCriterion("E is null");
			return this;
		}

		public Criteria andEIsNotNull() {
			addCriterion("E is not null");
			return this;
		}

		public Criteria andEEqualTo(String value) {
			addCriterion("E =", value, "e");
			return this;
		}

		public Criteria andENotEqualTo(String value) {
			addCriterion("E <>", value, "e");
			return this;
		}

		public Criteria andEGreaterThan(String value) {
			addCriterion("E >", value, "e");
			return this;
		}

		public Criteria andEGreaterThanOrEqualTo(String value) {
			addCriterion("E >=", value, "e");
			return this;
		}

		public Criteria andELessThan(String value) {
			addCriterion("E <", value, "e");
			return this;
		}

		public Criteria andELessThanOrEqualTo(String value) {
			addCriterion("E <=", value, "e");
			return this;
		}

		public Criteria andELike(String value) {
			addCriterion("E like", value, "e");
			return this;
		}

		public Criteria andENotLike(String value) {
			addCriterion("E not like", value, "e");
			return this;
		}

		public Criteria andEIn(List values) {
			addCriterion("E in", values, "e");
			return this;
		}

		public Criteria andENotIn(List values) {
			addCriterion("E not in", values, "e");
			return this;
		}

		public Criteria andEBetween(String value1, String value2) {
			addCriterion("E between", value1, value2, "e");
			return this;
		}

		public Criteria andENotBetween(String value1, String value2) {
			addCriterion("E not between", value1, value2, "e");
			return this;
		}

		public Criteria andFIsNull() {
			addCriterion("F is null");
			return this;
		}

		public Criteria andFIsNotNull() {
			addCriterion("F is not null");
			return this;
		}

		public Criteria andFEqualTo(String value) {
			addCriterion("F =", value, "f");
			return this;
		}

		public Criteria andFNotEqualTo(String value) {
			addCriterion("F <>", value, "f");
			return this;
		}

		public Criteria andFGreaterThan(String value) {
			addCriterion("F >", value, "f");
			return this;
		}

		public Criteria andFGreaterThanOrEqualTo(String value) {
			addCriterion("F >=", value, "f");
			return this;
		}

		public Criteria andFLessThan(String value) {
			addCriterion("F <", value, "f");
			return this;
		}

		public Criteria andFLessThanOrEqualTo(String value) {
			addCriterion("F <=", value, "f");
			return this;
		}

		public Criteria andFLike(String value) {
			addCriterion("F like", value, "f");
			return this;
		}

		public Criteria andFNotLike(String value) {
			addCriterion("F not like", value, "f");
			return this;
		}

		public Criteria andFIn(List values) {
			addCriterion("F in", values, "f");
			return this;
		}

		public Criteria andFNotIn(List values) {
			addCriterion("F not in", values, "f");
			return this;
		}

		public Criteria andFBetween(String value1, String value2) {
			addCriterion("F between", value1, value2, "f");
			return this;
		}

		public Criteria andFNotBetween(String value1, String value2) {
			addCriterion("F not between", value1, value2, "f");
			return this;
		}

		public Criteria andFbIsNull() {
			addCriterion("FB is null");
			return this;
		}

		public Criteria andFbIsNotNull() {
			addCriterion("FB is not null");
			return this;
		}

		public Criteria andFbEqualTo(Long value) {
			addCriterion("FB =", value, "fb");
			return this;
		}

		public Criteria andFbNotEqualTo(Long value) {
			addCriterion("FB <>", value, "fb");
			return this;
		}

		public Criteria andFbGreaterThan(Long value) {
			addCriterion("FB >", value, "fb");
			return this;
		}

		public Criteria andFbGreaterThanOrEqualTo(Long value) {
			addCriterion("FB >=", value, "fb");
			return this;
		}

		public Criteria andFbLessThan(Long value) {
			addCriterion("FB <", value, "fb");
			return this;
		}

		public Criteria andFbLessThanOrEqualTo(Long value) {
			addCriterion("FB <=", value, "fb");
			return this;
		}

		public Criteria andFbIn(List values) {
			addCriterion("FB in", values, "fb");
			return this;
		}

		public Criteria andFbNotIn(List values) {
			addCriterion("FB not in", values, "fb");
			return this;
		}

		public Criteria andFbBetween(Long value1, Long value2) {
			addCriterion("FB between", value1, value2, "fb");
			return this;
		}

		public Criteria andFbNotBetween(Long value1, Long value2) {
			addCriterion("FB not between", value1, value2, "fb");
			return this;
		}

		public Criteria andGIsNull() {
			addCriterion("G is null");
			return this;
		}

		public Criteria andGIsNotNull() {
			addCriterion("G is not null");
			return this;
		}

		public Criteria andGEqualTo(String value) {
			addCriterion("G =", value, "g");
			return this;
		}

		public Criteria andGNotEqualTo(String value) {
			addCriterion("G <>", value, "g");
			return this;
		}

		public Criteria andGGreaterThan(String value) {
			addCriterion("G >", value, "g");
			return this;
		}

		public Criteria andGGreaterThanOrEqualTo(String value) {
			addCriterion("G >=", value, "g");
			return this;
		}

		public Criteria andGLessThan(String value) {
			addCriterion("G <", value, "g");
			return this;
		}

		public Criteria andGLessThanOrEqualTo(String value) {
			addCriterion("G <=", value, "g");
			return this;
		}

		public Criteria andGLike(String value) {
			addCriterion("G like", value, "g");
			return this;
		}

		public Criteria andGNotLike(String value) {
			addCriterion("G not like", value, "g");
			return this;
		}

		public Criteria andGIn(List values) {
			addCriterion("G in", values, "g");
			return this;
		}

		public Criteria andGNotIn(List values) {
			addCriterion("G not in", values, "g");
			return this;
		}

		public Criteria andGBetween(String value1, String value2) {
			addCriterion("G between", value1, value2, "g");
			return this;
		}

		public Criteria andGNotBetween(String value1, String value2) {
			addCriterion("G not between", value1, value2, "g");
			return this;
		}

		public Criteria andHIsNull() {
			addCriterion("H is null");
			return this;
		}

		public Criteria andHIsNotNull() {
			addCriterion("H is not null");
			return this;
		}

		public Criteria andHEqualTo(String value) {
			addCriterion("H =", value, "h");
			return this;
		}

		public Criteria andHNotEqualTo(String value) {
			addCriterion("H <>", value, "h");
			return this;
		}

		public Criteria andHGreaterThan(String value) {
			addCriterion("H >", value, "h");
			return this;
		}

		public Criteria andHGreaterThanOrEqualTo(String value) {
			addCriterion("H >=", value, "h");
			return this;
		}

		public Criteria andHLessThan(String value) {
			addCriterion("H <", value, "h");
			return this;
		}

		public Criteria andHLessThanOrEqualTo(String value) {
			addCriterion("H <=", value, "h");
			return this;
		}

		public Criteria andHLike(String value) {
			addCriterion("H like", value, "h");
			return this;
		}

		public Criteria andHNotLike(String value) {
			addCriterion("H not like", value, "h");
			return this;
		}

		public Criteria andHIn(List values) {
			addCriterion("H in", values, "h");
			return this;
		}

		public Criteria andHNotIn(List values) {
			addCriterion("H not in", values, "h");
			return this;
		}

		public Criteria andHBetween(String value1, String value2) {
			addCriterion("H between", value1, value2, "h");
			return this;
		}

		public Criteria andHNotBetween(String value1, String value2) {
			addCriterion("H not between", value1, value2, "h");
			return this;
		}

		public Criteria andIIsNull() {
			addCriterion("I is null");
			return this;
		}

		public Criteria andIIsNotNull() {
			addCriterion("I is not null");
			return this;
		}

		public Criteria andIEqualTo(String value) {
			addCriterion("I =", value, "i");
			return this;
		}

		public Criteria andINotEqualTo(String value) {
			addCriterion("I <>", value, "i");
			return this;
		}

		public Criteria andIGreaterThan(String value) {
			addCriterion("I >", value, "i");
			return this;
		}

		public Criteria andIGreaterThanOrEqualTo(String value) {
			addCriterion("I >=", value, "i");
			return this;
		}

		public Criteria andILessThan(String value) {
			addCriterion("I <", value, "i");
			return this;
		}

		public Criteria andILessThanOrEqualTo(String value) {
			addCriterion("I <=", value, "i");
			return this;
		}

		public Criteria andILike(String value) {
			addCriterion("I like", value, "i");
			return this;
		}

		public Criteria andINotLike(String value) {
			addCriterion("I not like", value, "i");
			return this;
		}

		public Criteria andIIn(List values) {
			addCriterion("I in", values, "i");
			return this;
		}

		public Criteria andINotIn(List values) {
			addCriterion("I not in", values, "i");
			return this;
		}

		public Criteria andIBetween(String value1, String value2) {
			addCriterion("I between", value1, value2, "i");
			return this;
		}

		public Criteria andINotBetween(String value1, String value2) {
			addCriterion("I not between", value1, value2, "i");
			return this;
		}

		public Criteria andZbIsNull() {
			addCriterion("ZB is null");
			return this;
		}

		public Criteria andZbIsNotNull() {
			addCriterion("ZB is not null");
			return this;
		}

		public Criteria andZbEqualTo(Long value) {
			addCriterion("ZB =", value, "zb");
			return this;
		}

		public Criteria andZbNotEqualTo(Long value) {
			addCriterion("ZB <>", value, "zb");
			return this;
		}

		public Criteria andZbGreaterThan(Long value) {
			addCriterion("ZB >", value, "zb");
			return this;
		}

		public Criteria andZbGreaterThanOrEqualTo(Long value) {
			addCriterion("ZB >=", value, "zb");
			return this;
		}

		public Criteria andZbLessThan(Long value) {
			addCriterion("ZB <", value, "zb");
			return this;
		}

		public Criteria andZbLessThanOrEqualTo(Long value) {
			addCriterion("ZB <=", value, "zb");
			return this;
		}

		public Criteria andZbIn(List values) {
			addCriterion("ZB in", values, "zb");
			return this;
		}

		public Criteria andZbNotIn(List values) {
			addCriterion("ZB not in", values, "zb");
			return this;
		}

		public Criteria andZbBetween(Long value1, Long value2) {
			addCriterion("ZB between", value1, value2, "zb");
			return this;
		}

		public Criteria andZbNotBetween(Long value1, Long value2) {
			addCriterion("ZB not between", value1, value2, "zb");
			return this;
		}
	}
}