package com.yondervision.yfmap.dto.shiyan;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class SmsSendRecoderExample {

	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table SMS_SEND_RECODER
	 * @abatorgenerated  Fri Sep 16 19:29:10 CST 2016
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table SMS_SEND_RECODER
	 * @abatorgenerated  Fri Sep 16 19:29:10 CST 2016
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table SMS_SEND_RECODER
	 * @abatorgenerated  Fri Sep 16 19:29:10 CST 2016
	 */
	public SmsSendRecoderExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table SMS_SEND_RECODER
	 * @abatorgenerated  Fri Sep 16 19:29:10 CST 2016
	 */
	protected SmsSendRecoderExample(SmsSendRecoderExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table SMS_SEND_RECODER
	 * @abatorgenerated  Fri Sep 16 19:29:10 CST 2016
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table SMS_SEND_RECODER
	 * @abatorgenerated  Fri Sep 16 19:29:10 CST 2016
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table SMS_SEND_RECODER
	 * @abatorgenerated  Fri Sep 16 19:29:10 CST 2016
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table SMS_SEND_RECODER
	 * @abatorgenerated  Fri Sep 16 19:29:10 CST 2016
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table SMS_SEND_RECODER
	 * @abatorgenerated  Fri Sep 16 19:29:10 CST 2016
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table SMS_SEND_RECODER
	 * @abatorgenerated  Fri Sep 16 19:29:10 CST 2016
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table SMS_SEND_RECODER
	 * @abatorgenerated  Fri Sep 16 19:29:10 CST 2016
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Abator for iBATIS. This class corresponds to the database table SMS_SEND_RECODER
	 * @abatorgenerated  Fri Sep 16 19:29:10 CST 2016
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		protected void addCriterionForJDBCDate(String condition, Date value,
				String property) {
			addCriterion(condition, new java.sql.Date(value.getTime()),
					property);
		}

		protected void addCriterionForJDBCDate(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			List dateList = new ArrayList();
			Iterator iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(((Date) iter.next()).getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1,
				Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()),
					new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andSmssourceIsNull() {
			addCriterion("SMSSOURCE is null");
			return this;
		}

		public Criteria andSmssourceIsNotNull() {
			addCriterion("SMSSOURCE is not null");
			return this;
		}

		public Criteria andSmssourceEqualTo(String value) {
			addCriterion("SMSSOURCE =", value, "smssource");
			return this;
		}

		public Criteria andSmssourceNotEqualTo(String value) {
			addCriterion("SMSSOURCE <>", value, "smssource");
			return this;
		}

		public Criteria andSmssourceGreaterThan(String value) {
			addCriterion("SMSSOURCE >", value, "smssource");
			return this;
		}

		public Criteria andSmssourceGreaterThanOrEqualTo(String value) {
			addCriterion("SMSSOURCE >=", value, "smssource");
			return this;
		}

		public Criteria andSmssourceLessThan(String value) {
			addCriterion("SMSSOURCE <", value, "smssource");
			return this;
		}

		public Criteria andSmssourceLessThanOrEqualTo(String value) {
			addCriterion("SMSSOURCE <=", value, "smssource");
			return this;
		}

		public Criteria andSmssourceLike(String value) {
			addCriterion("SMSSOURCE like", value, "smssource");
			return this;
		}

		public Criteria andSmssourceNotLike(String value) {
			addCriterion("SMSSOURCE not like", value, "smssource");
			return this;
		}

		public Criteria andSmssourceIn(List values) {
			addCriterion("SMSSOURCE in", values, "smssource");
			return this;
		}

		public Criteria andSmssourceNotIn(List values) {
			addCriterion("SMSSOURCE not in", values, "smssource");
			return this;
		}

		public Criteria andSmssourceBetween(String value1, String value2) {
			addCriterion("SMSSOURCE between", value1, value2, "smssource");
			return this;
		}

		public Criteria andSmssourceNotBetween(String value1, String value2) {
			addCriterion("SMSSOURCE not between", value1, value2, "smssource");
			return this;
		}

		public Criteria andCertinumIsNull() {
			addCriterion("CERTINUM is null");
			return this;
		}

		public Criteria andCertinumIsNotNull() {
			addCriterion("CERTINUM is not null");
			return this;
		}

		public Criteria andCertinumEqualTo(String value) {
			addCriterion("CERTINUM =", value, "certinum");
			return this;
		}

		public Criteria andCertinumNotEqualTo(String value) {
			addCriterion("CERTINUM <>", value, "certinum");
			return this;
		}

		public Criteria andCertinumGreaterThan(String value) {
			addCriterion("CERTINUM >", value, "certinum");
			return this;
		}

		public Criteria andCertinumGreaterThanOrEqualTo(String value) {
			addCriterion("CERTINUM >=", value, "certinum");
			return this;
		}

		public Criteria andCertinumLessThan(String value) {
			addCriterion("CERTINUM <", value, "certinum");
			return this;
		}

		public Criteria andCertinumLessThanOrEqualTo(String value) {
			addCriterion("CERTINUM <=", value, "certinum");
			return this;
		}

		public Criteria andCertinumLike(String value) {
			addCriterion("CERTINUM like", value, "certinum");
			return this;
		}

		public Criteria andCertinumNotLike(String value) {
			addCriterion("CERTINUM not like", value, "certinum");
			return this;
		}

		public Criteria andCertinumIn(List values) {
			addCriterion("CERTINUM in", values, "certinum");
			return this;
		}

		public Criteria andCertinumNotIn(List values) {
			addCriterion("CERTINUM not in", values, "certinum");
			return this;
		}

		public Criteria andCertinumBetween(String value1, String value2) {
			addCriterion("CERTINUM between", value1, value2, "certinum");
			return this;
		}

		public Criteria andCertinumNotBetween(String value1, String value2) {
			addCriterion("CERTINUM not between", value1, value2, "certinum");
			return this;
		}

		public Criteria andFundbusinessIdIsNull() {
			addCriterion("FUNDBUSINESS_ID is null");
			return this;
		}

		public Criteria andFundbusinessIdIsNotNull() {
			addCriterion("FUNDBUSINESS_ID is not null");
			return this;
		}

		public Criteria andFundbusinessIdEqualTo(String value) {
			addCriterion("FUNDBUSINESS_ID =", value, "fundbusinessId");
			return this;
		}

		public Criteria andFundbusinessIdNotEqualTo(String value) {
			addCriterion("FUNDBUSINESS_ID <>", value, "fundbusinessId");
			return this;
		}

		public Criteria andFundbusinessIdGreaterThan(String value) {
			addCriterion("FUNDBUSINESS_ID >", value, "fundbusinessId");
			return this;
		}

		public Criteria andFundbusinessIdGreaterThanOrEqualTo(String value) {
			addCriterion("FUNDBUSINESS_ID >=", value, "fundbusinessId");
			return this;
		}

		public Criteria andFundbusinessIdLessThan(String value) {
			addCriterion("FUNDBUSINESS_ID <", value, "fundbusinessId");
			return this;
		}

		public Criteria andFundbusinessIdLessThanOrEqualTo(String value) {
			addCriterion("FUNDBUSINESS_ID <=", value, "fundbusinessId");
			return this;
		}

		public Criteria andFundbusinessIdLike(String value) {
			addCriterion("FUNDBUSINESS_ID like", value, "fundbusinessId");
			return this;
		}

		public Criteria andFundbusinessIdNotLike(String value) {
			addCriterion("FUNDBUSINESS_ID not like", value, "fundbusinessId");
			return this;
		}

		public Criteria andFundbusinessIdIn(List values) {
			addCriterion("FUNDBUSINESS_ID in", values, "fundbusinessId");
			return this;
		}

		public Criteria andFundbusinessIdNotIn(List values) {
			addCriterion("FUNDBUSINESS_ID not in", values, "fundbusinessId");
			return this;
		}

		public Criteria andFundbusinessIdBetween(String value1, String value2) {
			addCriterion("FUNDBUSINESS_ID between", value1, value2,
					"fundbusinessId");
			return this;
		}

		public Criteria andFundbusinessIdNotBetween(String value1, String value2) {
			addCriterion("FUNDBUSINESS_ID not between", value1, value2,
					"fundbusinessId");
			return this;
		}

		public Criteria andFreeuse1IsNull() {
			addCriterion("FREEUSE1 is null");
			return this;
		}

		public Criteria andFreeuse1IsNotNull() {
			addCriterion("FREEUSE1 is not null");
			return this;
		}

		public Criteria andFreeuse1EqualTo(String value) {
			addCriterion("FREEUSE1 =", value, "freeuse1");
			return this;
		}

		public Criteria andFreeuse1NotEqualTo(String value) {
			addCriterion("FREEUSE1 <>", value, "freeuse1");
			return this;
		}

		public Criteria andFreeuse1GreaterThan(String value) {
			addCriterion("FREEUSE1 >", value, "freeuse1");
			return this;
		}

		public Criteria andFreeuse1GreaterThanOrEqualTo(String value) {
			addCriterion("FREEUSE1 >=", value, "freeuse1");
			return this;
		}

		public Criteria andFreeuse1LessThan(String value) {
			addCriterion("FREEUSE1 <", value, "freeuse1");
			return this;
		}

		public Criteria andFreeuse1LessThanOrEqualTo(String value) {
			addCriterion("FREEUSE1 <=", value, "freeuse1");
			return this;
		}

		public Criteria andFreeuse1Like(String value) {
			addCriterion("FREEUSE1 like", value, "freeuse1");
			return this;
		}

		public Criteria andFreeuse1NotLike(String value) {
			addCriterion("FREEUSE1 not like", value, "freeuse1");
			return this;
		}

		public Criteria andFreeuse1In(List values) {
			addCriterion("FREEUSE1 in", values, "freeuse1");
			return this;
		}

		public Criteria andFreeuse1NotIn(List values) {
			addCriterion("FREEUSE1 not in", values, "freeuse1");
			return this;
		}

		public Criteria andFreeuse1Between(String value1, String value2) {
			addCriterion("FREEUSE1 between", value1, value2, "freeuse1");
			return this;
		}

		public Criteria andFreeuse1NotBetween(String value1, String value2) {
			addCriterion("FREEUSE1 not between", value1, value2, "freeuse1");
			return this;
		}

		public Criteria andFreeuse2IsNull() {
			addCriterion("FREEUSE2 is null");
			return this;
		}

		public Criteria andFreeuse2IsNotNull() {
			addCriterion("FREEUSE2 is not null");
			return this;
		}

		public Criteria andFreeuse2EqualTo(BigDecimal value) {
			addCriterion("FREEUSE2 =", value, "freeuse2");
			return this;
		}

		public Criteria andFreeuse2NotEqualTo(BigDecimal value) {
			addCriterion("FREEUSE2 <>", value, "freeuse2");
			return this;
		}

		public Criteria andFreeuse2GreaterThan(BigDecimal value) {
			addCriterion("FREEUSE2 >", value, "freeuse2");
			return this;
		}

		public Criteria andFreeuse2GreaterThanOrEqualTo(BigDecimal value) {
			addCriterion("FREEUSE2 >=", value, "freeuse2");
			return this;
		}

		public Criteria andFreeuse2LessThan(BigDecimal value) {
			addCriterion("FREEUSE2 <", value, "freeuse2");
			return this;
		}

		public Criteria andFreeuse2LessThanOrEqualTo(BigDecimal value) {
			addCriterion("FREEUSE2 <=", value, "freeuse2");
			return this;
		}

		public Criteria andFreeuse2In(List values) {
			addCriterion("FREEUSE2 in", values, "freeuse2");
			return this;
		}

		public Criteria andFreeuse2NotIn(List values) {
			addCriterion("FREEUSE2 not in", values, "freeuse2");
			return this;
		}

		public Criteria andFreeuse2Between(BigDecimal value1, BigDecimal value2) {
			addCriterion("FREEUSE2 between", value1, value2, "freeuse2");
			return this;
		}

		public Criteria andFreeuse2NotBetween(BigDecimal value1,
				BigDecimal value2) {
			addCriterion("FREEUSE2 not between", value1, value2, "freeuse2");
			return this;
		}

		public Criteria andFreeuse3IsNull() {
			addCriterion("FREEUSE3 is null");
			return this;
		}

		public Criteria andFreeuse3IsNotNull() {
			addCriterion("FREEUSE3 is not null");
			return this;
		}

		public Criteria andFreeuse3EqualTo(Integer value) {
			addCriterion("FREEUSE3 =", value, "freeuse3");
			return this;
		}

		public Criteria andFreeuse3NotEqualTo(Integer value) {
			addCriterion("FREEUSE3 <>", value, "freeuse3");
			return this;
		}

		public Criteria andFreeuse3GreaterThan(Integer value) {
			addCriterion("FREEUSE3 >", value, "freeuse3");
			return this;
		}

		public Criteria andFreeuse3GreaterThanOrEqualTo(Integer value) {
			addCriterion("FREEUSE3 >=", value, "freeuse3");
			return this;
		}

		public Criteria andFreeuse3LessThan(Integer value) {
			addCriterion("FREEUSE3 <", value, "freeuse3");
			return this;
		}

		public Criteria andFreeuse3LessThanOrEqualTo(Integer value) {
			addCriterion("FREEUSE3 <=", value, "freeuse3");
			return this;
		}

		public Criteria andFreeuse3In(List values) {
			addCriterion("FREEUSE3 in", values, "freeuse3");
			return this;
		}

		public Criteria andFreeuse3NotIn(List values) {
			addCriterion("FREEUSE3 not in", values, "freeuse3");
			return this;
		}

		public Criteria andFreeuse3Between(Integer value1, Integer value2) {
			addCriterion("FREEUSE3 between", value1, value2, "freeuse3");
			return this;
		}

		public Criteria andFreeuse3NotBetween(Integer value1, Integer value2) {
			addCriterion("FREEUSE3 not between", value1, value2, "freeuse3");
			return this;
		}

		public Criteria andFreeuse4IsNull() {
			addCriterion("FREEUSE4 is null");
			return this;
		}

		public Criteria andFreeuse4IsNotNull() {
			addCriterion("FREEUSE4 is not null");
			return this;
		}

		public Criteria andFreeuse4EqualTo(Date value) {
			addCriterionForJDBCDate("FREEUSE4 =", value, "freeuse4");
			return this;
		}

		public Criteria andFreeuse4NotEqualTo(Date value) {
			addCriterionForJDBCDate("FREEUSE4 <>", value, "freeuse4");
			return this;
		}

		public Criteria andFreeuse4GreaterThan(Date value) {
			addCriterionForJDBCDate("FREEUSE4 >", value, "freeuse4");
			return this;
		}

		public Criteria andFreeuse4GreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("FREEUSE4 >=", value, "freeuse4");
			return this;
		}

		public Criteria andFreeuse4LessThan(Date value) {
			addCriterionForJDBCDate("FREEUSE4 <", value, "freeuse4");
			return this;
		}

		public Criteria andFreeuse4LessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("FREEUSE4 <=", value, "freeuse4");
			return this;
		}

		public Criteria andFreeuse4In(List values) {
			addCriterionForJDBCDate("FREEUSE4 in", values, "freeuse4");
			return this;
		}

		public Criteria andFreeuse4NotIn(List values) {
			addCriterionForJDBCDate("FREEUSE4 not in", values, "freeuse4");
			return this;
		}

		public Criteria andFreeuse4Between(Date value1, Date value2) {
			addCriterionForJDBCDate("FREEUSE4 between", value1, value2,
					"freeuse4");
			return this;
		}

		public Criteria andFreeuse4NotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("FREEUSE4 not between", value1, value2,
					"freeuse4");
			return this;
		}

		public Criteria andFreeuse5IsNull() {
			addCriterion("FREEUSE5 is null");
			return this;
		}

		public Criteria andFreeuse5IsNotNull() {
			addCriterion("FREEUSE5 is not null");
			return this;
		}

		public Criteria andFreeuse5EqualTo(String value) {
			addCriterion("FREEUSE5 =", value, "freeuse5");
			return this;
		}

		public Criteria andFreeuse5NotEqualTo(String value) {
			addCriterion("FREEUSE5 <>", value, "freeuse5");
			return this;
		}

		public Criteria andFreeuse5GreaterThan(String value) {
			addCriterion("FREEUSE5 >", value, "freeuse5");
			return this;
		}

		public Criteria andFreeuse5GreaterThanOrEqualTo(String value) {
			addCriterion("FREEUSE5 >=", value, "freeuse5");
			return this;
		}

		public Criteria andFreeuse5LessThan(String value) {
			addCriterion("FREEUSE5 <", value, "freeuse5");
			return this;
		}

		public Criteria andFreeuse5LessThanOrEqualTo(String value) {
			addCriterion("FREEUSE5 <=", value, "freeuse5");
			return this;
		}

		public Criteria andFreeuse5Like(String value) {
			addCriterion("FREEUSE5 like", value, "freeuse5");
			return this;
		}

		public Criteria andFreeuse5NotLike(String value) {
			addCriterion("FREEUSE5 not like", value, "freeuse5");
			return this;
		}

		public Criteria andFreeuse5In(List values) {
			addCriterion("FREEUSE5 in", values, "freeuse5");
			return this;
		}

		public Criteria andFreeuse5NotIn(List values) {
			addCriterion("FREEUSE5 not in", values, "freeuse5");
			return this;
		}

		public Criteria andFreeuse5Between(String value1, String value2) {
			addCriterion("FREEUSE5 between", value1, value2, "freeuse5");
			return this;
		}

		public Criteria andFreeuse5NotBetween(String value1, String value2) {
			addCriterion("FREEUSE5 not between", value1, value2, "freeuse5");
			return this;
		}

		public Criteria andFreeuse6IsNull() {
			addCriterion("FREEUSE6 is null");
			return this;
		}

		public Criteria andFreeuse6IsNotNull() {
			addCriterion("FREEUSE6 is not null");
			return this;
		}

		public Criteria andFreeuse6EqualTo(String value) {
			addCriterion("FREEUSE6 =", value, "freeuse6");
			return this;
		}

		public Criteria andFreeuse6NotEqualTo(String value) {
			addCriterion("FREEUSE6 <>", value, "freeuse6");
			return this;
		}

		public Criteria andFreeuse6GreaterThan(String value) {
			addCriterion("FREEUSE6 >", value, "freeuse6");
			return this;
		}

		public Criteria andFreeuse6GreaterThanOrEqualTo(String value) {
			addCriterion("FREEUSE6 >=", value, "freeuse6");
			return this;
		}

		public Criteria andFreeuse6LessThan(String value) {
			addCriterion("FREEUSE6 <", value, "freeuse6");
			return this;
		}

		public Criteria andFreeuse6LessThanOrEqualTo(String value) {
			addCriterion("FREEUSE6 <=", value, "freeuse6");
			return this;
		}

		public Criteria andFreeuse6Like(String value) {
			addCriterion("FREEUSE6 like", value, "freeuse6");
			return this;
		}

		public Criteria andFreeuse6NotLike(String value) {
			addCriterion("FREEUSE6 not like", value, "freeuse6");
			return this;
		}

		public Criteria andFreeuse6In(List values) {
			addCriterion("FREEUSE6 in", values, "freeuse6");
			return this;
		}

		public Criteria andFreeuse6NotIn(List values) {
			addCriterion("FREEUSE6 not in", values, "freeuse6");
			return this;
		}

		public Criteria andFreeuse6Between(String value1, String value2) {
			addCriterion("FREEUSE6 between", value1, value2, "freeuse6");
			return this;
		}

		public Criteria andFreeuse6NotBetween(String value1, String value2) {
			addCriterion("FREEUSE6 not between", value1, value2, "freeuse6");
			return this;
		}
	}
}